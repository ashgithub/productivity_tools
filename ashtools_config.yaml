model:
  type: oci  # Options: oci, gemini, ollama
  #type: gemini  # Options: oci, gemini, ollama
  #type: ollama  # Options: oci, gemini, ollama
  
  # OCI model parameters
  oci_params:
    #model_name: "cohere.command-r-plus-08-2024"
    #model_name: "cohere.command-r-08-2024"
    #model_name: "meta.llama-3.1-405b-instruct"
    model_name: "meta.llama-3.3-70b-instruct"
    endpoint: "https://inference.generativeai.us-chicago-1.oci.oraclecloud.com"
    compartment_id: "ocid1.compartment.oc1..aaaaaaaaxj6fuodcmai6n6z5yyqif6a36ewfmmovn42red37ml3wxlehjmga"
    model_kwargs:
      temperature: 0.7
      max_tokens: 500
    auth_profile: "INNO-SANDBOX"
  
  # Gemini model parameters
  gemini_params:
    model_name: "gemini-2.0-flash"
    temperature: 0.7
    max_tokens: 500
    api_key: ${GEMINI_PERSONAL}

  # Ollama model parameters
  ollama_params:
    model_name: "llama3-groq-tool-use"
    #model_name: "deepseek-r1"
    #model_name: "phi4-mini"
    #model_name: "mistral"
    url: "https://macmini.industrylab.uk/ollama/"
    temperature: 0.7
    api_key: ${OLLAMA_AUTHKEY}

# Custom system prompt (optional)
explain_prompt: >
    You are a professional developer. You explain complex commands or code snippets in an easy to understand but succinct way. 
    Give a short summary explanation of 3-4 sentences max.
help_prompt: >
    You are a apple commandline developer. you know a wide variety of linux like commands that can be executed in the terminal. 
    Give a 2-3 options for command baed on the decription below. each command option is one line with command and parameters explained"
cmd_prompt: >
    you are a command line expert who only responds in valid json. generate a valid macos command line for zsh to accomplish the given task.
    Give alternatives if possible. Respond with valid json only with format { "1":"response1","2":"response2"}. just one line response for each alternative.
    ensure your response is a valid json no errorss. try to give at least 3 alternatives when possible.
    Here are a few examples of the response i am looking for: 
    task: edit  file1.txt in  dir abc
    response: {"1":"vi abc/file.txt", "2":"nano abc/file.txt"}
    task: find  file1.txt in  dir abc
    response: {"1":"find abc -name file1.txt -type f"}
    task:  print a file
    response: {"1":"cat file", "2":"head file", "3":"tail file"}
